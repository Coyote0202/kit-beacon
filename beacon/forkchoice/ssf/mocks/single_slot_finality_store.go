// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/ethereum/go-ethereum/common"

	mock "github.com/stretchr/testify/mock"

	ssf "github.com/itsdevbear/bolaris/beacon/forkchoice/ssf"
)

// SingleSlotFinalityStore is an autogenerated mock type for the SingleSlotFinalityStore type
type SingleSlotFinalityStore struct {
	mock.Mock
}

type SingleSlotFinalityStore_Expecter struct {
	mock *mock.Mock
}

func (_m *SingleSlotFinalityStore) EXPECT() *SingleSlotFinalityStore_Expecter {
	return &SingleSlotFinalityStore_Expecter{mock: &_m.Mock}
}

// GenesisEth1Hash provides a mock function with given fields:
func (_m *SingleSlotFinalityStore) GenesisEth1Hash() common.Hash {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GenesisEth1Hash")
	}

	var r0 common.Hash
	if rf, ok := ret.Get(0).(func() common.Hash); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.Hash)
		}
	}

	return r0
}

// SingleSlotFinalityStore_GenesisEth1Hash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenesisEth1Hash'
type SingleSlotFinalityStore_GenesisEth1Hash_Call struct {
	*mock.Call
}

// GenesisEth1Hash is a helper method to define mock.On call
func (_e *SingleSlotFinalityStore_Expecter) GenesisEth1Hash() *SingleSlotFinalityStore_GenesisEth1Hash_Call {
	return &SingleSlotFinalityStore_GenesisEth1Hash_Call{Call: _e.mock.On("GenesisEth1Hash")}
}

func (_c *SingleSlotFinalityStore_GenesisEth1Hash_Call) Run(run func()) *SingleSlotFinalityStore_GenesisEth1Hash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SingleSlotFinalityStore_GenesisEth1Hash_Call) Return(_a0 common.Hash) *SingleSlotFinalityStore_GenesisEth1Hash_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SingleSlotFinalityStore_GenesisEth1Hash_Call) RunAndReturn(run func() common.Hash) *SingleSlotFinalityStore_GenesisEth1Hash_Call {
	_c.Call.Return(run)
	return _c
}

// GetFinalizedEth1BlockHash provides a mock function with given fields:
func (_m *SingleSlotFinalityStore) GetFinalizedEth1BlockHash() common.Hash {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFinalizedEth1BlockHash")
	}

	var r0 common.Hash
	if rf, ok := ret.Get(0).(func() common.Hash); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.Hash)
		}
	}

	return r0
}

// SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFinalizedEth1BlockHash'
type SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call struct {
	*mock.Call
}

// GetFinalizedEth1BlockHash is a helper method to define mock.On call
func (_e *SingleSlotFinalityStore_Expecter) GetFinalizedEth1BlockHash() *SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call {
	return &SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call{Call: _e.mock.On("GetFinalizedEth1BlockHash")}
}

func (_c *SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call) Run(run func()) *SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call) Return(_a0 common.Hash) *SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call) RunAndReturn(run func() common.Hash) *SingleSlotFinalityStore_GetFinalizedEth1BlockHash_Call {
	_c.Call.Return(run)
	return _c
}

// GetSafeEth1BlockHash provides a mock function with given fields:
func (_m *SingleSlotFinalityStore) GetSafeEth1BlockHash() common.Hash {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSafeEth1BlockHash")
	}

	var r0 common.Hash
	if rf, ok := ret.Get(0).(func() common.Hash); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.Hash)
		}
	}

	return r0
}

// SingleSlotFinalityStore_GetSafeEth1BlockHash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSafeEth1BlockHash'
type SingleSlotFinalityStore_GetSafeEth1BlockHash_Call struct {
	*mock.Call
}

// GetSafeEth1BlockHash is a helper method to define mock.On call
func (_e *SingleSlotFinalityStore_Expecter) GetSafeEth1BlockHash() *SingleSlotFinalityStore_GetSafeEth1BlockHash_Call {
	return &SingleSlotFinalityStore_GetSafeEth1BlockHash_Call{Call: _e.mock.On("GetSafeEth1BlockHash")}
}

func (_c *SingleSlotFinalityStore_GetSafeEth1BlockHash_Call) Run(run func()) *SingleSlotFinalityStore_GetSafeEth1BlockHash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SingleSlotFinalityStore_GetSafeEth1BlockHash_Call) Return(_a0 common.Hash) *SingleSlotFinalityStore_GetSafeEth1BlockHash_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SingleSlotFinalityStore_GetSafeEth1BlockHash_Call) RunAndReturn(run func() common.Hash) *SingleSlotFinalityStore_GetSafeEth1BlockHash_Call {
	_c.Call.Return(run)
	return _c
}

// SetFinalizedEth1BlockHash provides a mock function with given fields: blockHash
func (_m *SingleSlotFinalityStore) SetFinalizedEth1BlockHash(blockHash common.Hash) {
	_m.Called(blockHash)
}

// SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetFinalizedEth1BlockHash'
type SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call struct {
	*mock.Call
}

// SetFinalizedEth1BlockHash is a helper method to define mock.On call
//   - blockHash common.Hash
func (_e *SingleSlotFinalityStore_Expecter) SetFinalizedEth1BlockHash(blockHash interface{}) *SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call {
	return &SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call{Call: _e.mock.On("SetFinalizedEth1BlockHash", blockHash)}
}

func (_c *SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call) Run(run func(blockHash common.Hash)) *SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(common.Hash))
	})
	return _c
}

func (_c *SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call) Return() *SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call {
	_c.Call.Return()
	return _c
}

func (_c *SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call) RunAndReturn(run func(common.Hash)) *SingleSlotFinalityStore_SetFinalizedEth1BlockHash_Call {
	_c.Call.Return(run)
	return _c
}

// SetGenesisEth1Hash provides a mock function with given fields: _a0
func (_m *SingleSlotFinalityStore) SetGenesisEth1Hash(_a0 common.Hash) {
	_m.Called(_a0)
}

// SingleSlotFinalityStore_SetGenesisEth1Hash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetGenesisEth1Hash'
type SingleSlotFinalityStore_SetGenesisEth1Hash_Call struct {
	*mock.Call
}

// SetGenesisEth1Hash is a helper method to define mock.On call
//   - _a0 common.Hash
func (_e *SingleSlotFinalityStore_Expecter) SetGenesisEth1Hash(_a0 interface{}) *SingleSlotFinalityStore_SetGenesisEth1Hash_Call {
	return &SingleSlotFinalityStore_SetGenesisEth1Hash_Call{Call: _e.mock.On("SetGenesisEth1Hash", _a0)}
}

func (_c *SingleSlotFinalityStore_SetGenesisEth1Hash_Call) Run(run func(_a0 common.Hash)) *SingleSlotFinalityStore_SetGenesisEth1Hash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(common.Hash))
	})
	return _c
}

func (_c *SingleSlotFinalityStore_SetGenesisEth1Hash_Call) Return() *SingleSlotFinalityStore_SetGenesisEth1Hash_Call {
	_c.Call.Return()
	return _c
}

func (_c *SingleSlotFinalityStore_SetGenesisEth1Hash_Call) RunAndReturn(run func(common.Hash)) *SingleSlotFinalityStore_SetGenesisEth1Hash_Call {
	_c.Call.Return(run)
	return _c
}

// SetSafeEth1BlockHash provides a mock function with given fields: blockHash
func (_m *SingleSlotFinalityStore) SetSafeEth1BlockHash(blockHash common.Hash) {
	_m.Called(blockHash)
}

// SingleSlotFinalityStore_SetSafeEth1BlockHash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetSafeEth1BlockHash'
type SingleSlotFinalityStore_SetSafeEth1BlockHash_Call struct {
	*mock.Call
}

// SetSafeEth1BlockHash is a helper method to define mock.On call
//   - blockHash common.Hash
func (_e *SingleSlotFinalityStore_Expecter) SetSafeEth1BlockHash(blockHash interface{}) *SingleSlotFinalityStore_SetSafeEth1BlockHash_Call {
	return &SingleSlotFinalityStore_SetSafeEth1BlockHash_Call{Call: _e.mock.On("SetSafeEth1BlockHash", blockHash)}
}

func (_c *SingleSlotFinalityStore_SetSafeEth1BlockHash_Call) Run(run func(blockHash common.Hash)) *SingleSlotFinalityStore_SetSafeEth1BlockHash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(common.Hash))
	})
	return _c
}

func (_c *SingleSlotFinalityStore_SetSafeEth1BlockHash_Call) Return() *SingleSlotFinalityStore_SetSafeEth1BlockHash_Call {
	_c.Call.Return()
	return _c
}

func (_c *SingleSlotFinalityStore_SetSafeEth1BlockHash_Call) RunAndReturn(run func(common.Hash)) *SingleSlotFinalityStore_SetSafeEth1BlockHash_Call {
	_c.Call.Return(run)
	return _c
}

// WithContext provides a mock function with given fields: ctx
func (_m *SingleSlotFinalityStore) WithContext(ctx context.Context) ssf.SingleSlotFinalityStore {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for WithContext")
	}

	var r0 ssf.SingleSlotFinalityStore
	if rf, ok := ret.Get(0).(func(context.Context) ssf.SingleSlotFinalityStore); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ssf.SingleSlotFinalityStore)
		}
	}

	return r0
}

// SingleSlotFinalityStore_WithContext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WithContext'
type SingleSlotFinalityStore_WithContext_Call struct {
	*mock.Call
}

// WithContext is a helper method to define mock.On call
//   - ctx context.Context
func (_e *SingleSlotFinalityStore_Expecter) WithContext(ctx interface{}) *SingleSlotFinalityStore_WithContext_Call {
	return &SingleSlotFinalityStore_WithContext_Call{Call: _e.mock.On("WithContext", ctx)}
}

func (_c *SingleSlotFinalityStore_WithContext_Call) Run(run func(ctx context.Context)) *SingleSlotFinalityStore_WithContext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *SingleSlotFinalityStore_WithContext_Call) Return(_a0 ssf.SingleSlotFinalityStore) *SingleSlotFinalityStore_WithContext_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SingleSlotFinalityStore_WithContext_Call) RunAndReturn(run func(context.Context) ssf.SingleSlotFinalityStore) *SingleSlotFinalityStore_WithContext_Call {
	_c.Call.Return(run)
	return _c
}

// NewSingleSlotFinalityStore creates a new instance of SingleSlotFinalityStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSingleSlotFinalityStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *SingleSlotFinalityStore {
	mock := &SingleSlotFinalityStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
