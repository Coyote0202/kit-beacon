// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package consensusv1

import (
	fmt "fmt"
	io "io"
	reflect "reflect"
	sync "sync"

	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

var (
	md_BeaconKitBlock                    protoreflect.MessageDescriptor
	fd_BeaconKitBlock_slot               protoreflect.FieldDescriptor
	fd_BeaconKitBlock_block_body_generic protoreflect.FieldDescriptor
	fd_BeaconKitBlock_payload_value      protoreflect.FieldDescriptor
)

func init() {
	file_types_consensus_v1_block_proto_init()
	md_BeaconKitBlock = File_types_consensus_v1_block_proto.Messages().ByName("BeaconKitBlock")
	fd_BeaconKitBlock_slot = md_BeaconKitBlock.Fields().ByName("slot")
	fd_BeaconKitBlock_block_body_generic = md_BeaconKitBlock.Fields().ByName("block_body_generic")
	fd_BeaconKitBlock_payload_value = md_BeaconKitBlock.Fields().ByName("payload_value")
}

var _ protoreflect.Message = (*fastReflection_BeaconKitBlock)(nil)

type fastReflection_BeaconKitBlock BeaconKitBlock

func (x *BeaconKitBlock) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BeaconKitBlock)(x)
}

func (x *BeaconKitBlock) slowProtoReflect() protoreflect.Message {
	mi := &file_types_consensus_v1_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BeaconKitBlock_messageType fastReflection_BeaconKitBlock_messageType
var _ protoreflect.MessageType = fastReflection_BeaconKitBlock_messageType{}

type fastReflection_BeaconKitBlock_messageType struct{}

func (x fastReflection_BeaconKitBlock_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BeaconKitBlock)(nil)
}
func (x fastReflection_BeaconKitBlock_messageType) New() protoreflect.Message {
	return new(fastReflection_BeaconKitBlock)
}
func (x fastReflection_BeaconKitBlock_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BeaconKitBlock
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BeaconKitBlock) Descriptor() protoreflect.MessageDescriptor {
	return md_BeaconKitBlock
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BeaconKitBlock) Type() protoreflect.MessageType {
	return _fastReflection_BeaconKitBlock_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BeaconKitBlock) New() protoreflect.Message {
	return new(fastReflection_BeaconKitBlock)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BeaconKitBlock) Interface() protoreflect.ProtoMessage {
	return (*BeaconKitBlock)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BeaconKitBlock) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Slot != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Slot)
		if !f(fd_BeaconKitBlock_slot, value) {
			return
		}
	}
	if x.Body != nil {
		switch o := x.Body.(type) {
		case *BeaconKitBlock_BlockBodyGeneric:
			v := o.BlockBodyGeneric
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_BeaconKitBlock_block_body_generic, value) {
				return
			}
		}
	}
	if x.PayloadValue != "" {
		value := protoreflect.ValueOfString(x.PayloadValue)
		if !f(fd_BeaconKitBlock_payload_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BeaconKitBlock) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconKitBlock.slot":
		return x.Slot != uint64(0)
	case "types.consensus.v1.BeaconKitBlock.block_body_generic":
		if x.Body == nil {
			return false
		} else if _, ok := x.Body.(*BeaconKitBlock_BlockBodyGeneric); ok {
			return true
		} else {
			return false
		}
	case "types.consensus.v1.BeaconKitBlock.payload_value":
		return x.PayloadValue != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconKitBlock"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconKitBlock does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconKitBlock) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconKitBlock.slot":
		x.Slot = uint64(0)
	case "types.consensus.v1.BeaconKitBlock.block_body_generic":
		x.Body = nil
	case "types.consensus.v1.BeaconKitBlock.payload_value":
		x.PayloadValue = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconKitBlock"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconKitBlock does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BeaconKitBlock) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.consensus.v1.BeaconKitBlock.slot":
		value := x.Slot
		return protoreflect.ValueOfUint64(value)
	case "types.consensus.v1.BeaconKitBlock.block_body_generic":
		if x.Body == nil {
			return protoreflect.ValueOfMessage((*BeaconBlockBody)(nil).ProtoReflect())
		} else if v, ok := x.Body.(*BeaconKitBlock_BlockBodyGeneric); ok {
			return protoreflect.ValueOfMessage(v.BlockBodyGeneric.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*BeaconBlockBody)(nil).ProtoReflect())
		}
	case "types.consensus.v1.BeaconKitBlock.payload_value":
		value := x.PayloadValue
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconKitBlock"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconKitBlock does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconKitBlock) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconKitBlock.slot":
		x.Slot = value.Uint()
	case "types.consensus.v1.BeaconKitBlock.block_body_generic":
		cv := value.Message().Interface().(*BeaconBlockBody)
		x.Body = &BeaconKitBlock_BlockBodyGeneric{BlockBodyGeneric: cv}
	case "types.consensus.v1.BeaconKitBlock.payload_value":
		x.PayloadValue = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconKitBlock"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconKitBlock does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconKitBlock) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconKitBlock.block_body_generic":
		if x.Body == nil {
			value := &BeaconBlockBody{}
			oneofValue := &BeaconKitBlock_BlockBodyGeneric{BlockBodyGeneric: value}
			x.Body = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Body.(type) {
		case *BeaconKitBlock_BlockBodyGeneric:
			return protoreflect.ValueOfMessage(m.BlockBodyGeneric.ProtoReflect())
		default:
			value := &BeaconBlockBody{}
			oneofValue := &BeaconKitBlock_BlockBodyGeneric{BlockBodyGeneric: value}
			x.Body = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "types.consensus.v1.BeaconKitBlock.slot":
		panic(fmt.Errorf("field slot of message types.consensus.v1.BeaconKitBlock is not mutable"))
	case "types.consensus.v1.BeaconKitBlock.payload_value":
		panic(fmt.Errorf("field payload_value of message types.consensus.v1.BeaconKitBlock is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconKitBlock"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconKitBlock does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BeaconKitBlock) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconKitBlock.slot":
		return protoreflect.ValueOfUint64(uint64(0))
	case "types.consensus.v1.BeaconKitBlock.block_body_generic":
		value := &BeaconBlockBody{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "types.consensus.v1.BeaconKitBlock.payload_value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconKitBlock"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconKitBlock does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BeaconKitBlock) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "types.consensus.v1.BeaconKitBlock.body":
		if x.Body == nil {
			return nil
		}
		switch x.Body.(type) {
		case *BeaconKitBlock_BlockBodyGeneric:
			return x.Descriptor().Fields().ByName("block_body_generic")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.consensus.v1.BeaconKitBlock", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BeaconKitBlock) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconKitBlock) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BeaconKitBlock) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BeaconKitBlock) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BeaconKitBlock)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Slot != 0 {
			n += 1 + runtime.Sov(uint64(x.Slot))
		}
		switch x := x.Body.(type) {
		case *BeaconKitBlock_BlockBodyGeneric:
			if x == nil {
				break
			}
			l = options.Size(x.BlockBodyGeneric)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PayloadValue)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BeaconKitBlock)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Body.(type) {
		case *BeaconKitBlock_BlockBodyGeneric:
			encoded, err := options.Marshal(x.BlockBodyGeneric)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PayloadValue) > 0 {
			i -= len(x.PayloadValue)
			copy(dAtA[i:], x.PayloadValue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PayloadValue)))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xaa
		}
		if x.Slot != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Slot))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BeaconKitBlock)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BeaconKitBlock: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BeaconKitBlock: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
				}
				x.Slot = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Slot |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockBodyGeneric", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &BeaconBlockBody{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Body = &BeaconKitBlock_BlockBodyGeneric{v}
				iNdEx = postIndex
			case 101:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PayloadValue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PayloadValue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BeaconBlockBody                   protoreflect.MessageDescriptor
	fd_BeaconBlockBody_randao_reveal     protoreflect.FieldDescriptor
	fd_BeaconBlockBody_graffiti          protoreflect.FieldDescriptor
	fd_BeaconBlockBody_execution_payload protoreflect.FieldDescriptor
	fd_BeaconBlockBody_version           protoreflect.FieldDescriptor
)

func init() {
	file_types_consensus_v1_block_proto_init()
	md_BeaconBlockBody = File_types_consensus_v1_block_proto.Messages().ByName("BeaconBlockBody")
	fd_BeaconBlockBody_randao_reveal = md_BeaconBlockBody.Fields().ByName("randao_reveal")
	fd_BeaconBlockBody_graffiti = md_BeaconBlockBody.Fields().ByName("graffiti")
	fd_BeaconBlockBody_execution_payload = md_BeaconBlockBody.Fields().ByName("execution_payload")
	fd_BeaconBlockBody_version = md_BeaconBlockBody.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_BeaconBlockBody)(nil)

type fastReflection_BeaconBlockBody BeaconBlockBody

func (x *BeaconBlockBody) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BeaconBlockBody)(x)
}

func (x *BeaconBlockBody) slowProtoReflect() protoreflect.Message {
	mi := &file_types_consensus_v1_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BeaconBlockBody_messageType fastReflection_BeaconBlockBody_messageType
var _ protoreflect.MessageType = fastReflection_BeaconBlockBody_messageType{}

type fastReflection_BeaconBlockBody_messageType struct{}

func (x fastReflection_BeaconBlockBody_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BeaconBlockBody)(nil)
}
func (x fastReflection_BeaconBlockBody_messageType) New() protoreflect.Message {
	return new(fastReflection_BeaconBlockBody)
}
func (x fastReflection_BeaconBlockBody_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BeaconBlockBody
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BeaconBlockBody) Descriptor() protoreflect.MessageDescriptor {
	return md_BeaconBlockBody
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BeaconBlockBody) Type() protoreflect.MessageType {
	return _fastReflection_BeaconBlockBody_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BeaconBlockBody) New() protoreflect.Message {
	return new(fastReflection_BeaconBlockBody)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BeaconBlockBody) Interface() protoreflect.ProtoMessage {
	return (*BeaconBlockBody)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BeaconBlockBody) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RandaoReveal) != 0 {
		value := protoreflect.ValueOfBytes(x.RandaoReveal)
		if !f(fd_BeaconBlockBody_randao_reveal, value) {
			return
		}
	}
	if len(x.Graffiti) != 0 {
		value := protoreflect.ValueOfBytes(x.Graffiti)
		if !f(fd_BeaconBlockBody_graffiti, value) {
			return
		}
	}
	if len(x.ExecutionPayload) != 0 {
		value := protoreflect.ValueOfBytes(x.ExecutionPayload)
		if !f(fd_BeaconBlockBody_execution_payload, value) {
			return
		}
	}
	if x.Version != int64(0) {
		value := protoreflect.ValueOfInt64(x.Version)
		if !f(fd_BeaconBlockBody_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BeaconBlockBody) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconBlockBody.randao_reveal":
		return len(x.RandaoReveal) != 0
	case "types.consensus.v1.BeaconBlockBody.graffiti":
		return len(x.Graffiti) != 0
	case "types.consensus.v1.BeaconBlockBody.execution_payload":
		return len(x.ExecutionPayload) != 0
	case "types.consensus.v1.BeaconBlockBody.version":
		return x.Version != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconBlockBody"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconBlockBody does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconBlockBody) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconBlockBody.randao_reveal":
		x.RandaoReveal = nil
	case "types.consensus.v1.BeaconBlockBody.graffiti":
		x.Graffiti = nil
	case "types.consensus.v1.BeaconBlockBody.execution_payload":
		x.ExecutionPayload = nil
	case "types.consensus.v1.BeaconBlockBody.version":
		x.Version = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconBlockBody"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconBlockBody does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BeaconBlockBody) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "types.consensus.v1.BeaconBlockBody.randao_reveal":
		value := x.RandaoReveal
		return protoreflect.ValueOfBytes(value)
	case "types.consensus.v1.BeaconBlockBody.graffiti":
		value := x.Graffiti
		return protoreflect.ValueOfBytes(value)
	case "types.consensus.v1.BeaconBlockBody.execution_payload":
		value := x.ExecutionPayload
		return protoreflect.ValueOfBytes(value)
	case "types.consensus.v1.BeaconBlockBody.version":
		value := x.Version
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconBlockBody"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconBlockBody does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconBlockBody) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconBlockBody.randao_reveal":
		x.RandaoReveal = value.Bytes()
	case "types.consensus.v1.BeaconBlockBody.graffiti":
		x.Graffiti = value.Bytes()
	case "types.consensus.v1.BeaconBlockBody.execution_payload":
		x.ExecutionPayload = value.Bytes()
	case "types.consensus.v1.BeaconBlockBody.version":
		x.Version = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconBlockBody"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconBlockBody does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconBlockBody) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconBlockBody.randao_reveal":
		panic(fmt.Errorf("field randao_reveal of message types.consensus.v1.BeaconBlockBody is not mutable"))
	case "types.consensus.v1.BeaconBlockBody.graffiti":
		panic(fmt.Errorf("field graffiti of message types.consensus.v1.BeaconBlockBody is not mutable"))
	case "types.consensus.v1.BeaconBlockBody.execution_payload":
		panic(fmt.Errorf("field execution_payload of message types.consensus.v1.BeaconBlockBody is not mutable"))
	case "types.consensus.v1.BeaconBlockBody.version":
		panic(fmt.Errorf("field version of message types.consensus.v1.BeaconBlockBody is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconBlockBody"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconBlockBody does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BeaconBlockBody) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "types.consensus.v1.BeaconBlockBody.randao_reveal":
		return protoreflect.ValueOfBytes(nil)
	case "types.consensus.v1.BeaconBlockBody.graffiti":
		return protoreflect.ValueOfBytes(nil)
	case "types.consensus.v1.BeaconBlockBody.execution_payload":
		return protoreflect.ValueOfBytes(nil)
	case "types.consensus.v1.BeaconBlockBody.version":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: types.consensus.v1.BeaconBlockBody"))
		}
		panic(fmt.Errorf("message types.consensus.v1.BeaconBlockBody does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BeaconBlockBody) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in types.consensus.v1.BeaconBlockBody", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BeaconBlockBody) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BeaconBlockBody) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BeaconBlockBody) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BeaconBlockBody) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BeaconBlockBody)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RandaoReveal)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Graffiti)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExecutionPayload)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BeaconBlockBody)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x20
		}
		if len(x.ExecutionPayload) > 0 {
			i -= len(x.ExecutionPayload)
			copy(dAtA[i:], x.ExecutionPayload)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExecutionPayload)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Graffiti) > 0 {
			i -= len(x.Graffiti)
			copy(dAtA[i:], x.Graffiti)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Graffiti)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RandaoReveal) > 0 {
			i -= len(x.RandaoReveal)
			copy(dAtA[i:], x.RandaoReveal)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RandaoReveal)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BeaconBlockBody)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BeaconBlockBody: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BeaconBlockBody: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RandaoReveal", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RandaoReveal = append(x.RandaoReveal[:0], dAtA[iNdEx:postIndex]...)
				if x.RandaoReveal == nil {
					x.RandaoReveal = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Graffiti", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Graffiti = append(x.Graffiti[:0], dAtA[iNdEx:postIndex]...)
				if x.Graffiti == nil {
					x.Graffiti = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExecutionPayload", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExecutionPayload = append(x.ExecutionPayload[:0], dAtA[iNdEx:postIndex]...)
				if x.ExecutionPayload == nil {
					x.ExecutionPayload = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// SPDX-License-Identifier: MIT
//
// Copyright (c) 2023 Berachain Foundation
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: types/consensus/v1/block.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BeaconKitBlock represents a generic beacon block that can be used to represent
// any beacon block in the system.
type BeaconKitBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Beacon chain slot that this block represents.
	Slot uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// BeaconBlockBody contains the body of the beacon block.
	//
	// Types that are assignable to Body:
	//
	//	*BeaconKitBlock_BlockBodyGeneric
	Body isBeaconKitBlock_Body `protobuf_oneof:"body"`
	// The payload value of the block.
	PayloadValue string `protobuf:"bytes,101,opt,name=payload_value,json=payloadValue,proto3" json:"payload_value,omitempty"`
}

func (x *BeaconKitBlock) Reset() {
	*x = BeaconKitBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_consensus_v1_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconKitBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconKitBlock) ProtoMessage() {}

// Deprecated: Use BeaconKitBlock.ProtoReflect.Descriptor instead.
func (*BeaconKitBlock) Descriptor() ([]byte, []int) {
	return file_types_consensus_v1_block_proto_rawDescGZIP(), []int{0}
}

func (x *BeaconKitBlock) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BeaconKitBlock) GetBody() isBeaconKitBlock_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *BeaconKitBlock) GetBlockBodyGeneric() *BeaconBlockBody {
	if x, ok := x.GetBody().(*BeaconKitBlock_BlockBodyGeneric); ok {
		return x.BlockBodyGeneric
	}
	return nil
}

func (x *BeaconKitBlock) GetPayloadValue() string {
	if x != nil {
		return x.PayloadValue
	}
	return ""
}

type isBeaconKitBlock_Body interface {
	isBeaconKitBlock_Body()
}

type BeaconKitBlock_BlockBodyGeneric struct {
	BlockBodyGeneric *BeaconBlockBody `protobuf:"bytes,2,opt,name=block_body_generic,json=blockBodyGeneric,proto3,oneof"`
}

func (*BeaconKitBlock_BlockBodyGeneric) isBeaconKitBlock_Body() {}

// BeaconBlockBody represents the body of a beacon block.
type BeaconBlockBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The validators RANDAO reveal 96 byte value.
	RandaoReveal []byte `protobuf:"bytes,1,opt,name=randao_reveal,json=randaoReveal,proto3" json:"randao_reveal,omitempty"`
	// 32 byte field of arbitrary data. This field may contain any data and
	// is not used for anything other than a fun message.
	Graffiti []byte `protobuf:"bytes,2,opt,name=graffiti,proto3" json:"graffiti,omitempty"`
	// Execution payload from the execution chain. New in Bellatrix network upgrade.
	ExecutionPayload []byte `protobuf:"bytes,3,opt,name=execution_payload,json=executionPayload,proto3" json:"execution_payload,omitempty"`
	// TODO: DEPRECATE WHEN WE BREAK OUT INTO MULTIPLE MESSAGES PER FORK.
	Version int64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BeaconBlockBody) Reset() {
	*x = BeaconBlockBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_consensus_v1_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockBody) ProtoMessage() {}

// Deprecated: Use BeaconBlockBody.ProtoReflect.Descriptor instead.
func (*BeaconBlockBody) Descriptor() ([]byte, []int) {
	return file_types_consensus_v1_block_proto_rawDescGZIP(), []int{1}
}

func (x *BeaconBlockBody) GetRandaoReveal() []byte {
	if x != nil {
		return x.RandaoReveal
	}
	return nil
}

func (x *BeaconBlockBody) GetGraffiti() []byte {
	if x != nil {
		return x.Graffiti
	}
	return nil
}

func (x *BeaconBlockBody) GetExecutionPayload() []byte {
	if x != nil {
		return x.ExecutionPayload
	}
	return nil
}

func (x *BeaconBlockBody) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_types_consensus_v1_block_proto protoreflect.FileDescriptor

var file_types_consensus_v1_block_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x01, 0x0a, 0x0e, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x4b, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x59, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x45, 0xfa, 0xde, 0x1f,
	0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x79, 0x73,
	0x6d, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2f,
	0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x10, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x76,
	0x65, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x12,
	0x2b, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0xbf, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x54, 0x43, 0x58, 0xaa, 0x02, 0x12, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x5c, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x1e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x14, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_consensus_v1_block_proto_rawDescOnce sync.Once
	file_types_consensus_v1_block_proto_rawDescData = file_types_consensus_v1_block_proto_rawDesc
)

func file_types_consensus_v1_block_proto_rawDescGZIP() []byte {
	file_types_consensus_v1_block_proto_rawDescOnce.Do(func() {
		file_types_consensus_v1_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_consensus_v1_block_proto_rawDescData)
	})
	return file_types_consensus_v1_block_proto_rawDescData
}

var file_types_consensus_v1_block_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_types_consensus_v1_block_proto_goTypes = []interface{}{
	(*BeaconKitBlock)(nil),  // 0: types.consensus.v1.BeaconKitBlock
	(*BeaconBlockBody)(nil), // 1: types.consensus.v1.BeaconBlockBody
}
var file_types_consensus_v1_block_proto_depIdxs = []int32{
	1, // 0: types.consensus.v1.BeaconKitBlock.block_body_generic:type_name -> types.consensus.v1.BeaconBlockBody
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_types_consensus_v1_block_proto_init() }
func file_types_consensus_v1_block_proto_init() {
	if File_types_consensus_v1_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_consensus_v1_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconKitBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_consensus_v1_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_types_consensus_v1_block_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*BeaconKitBlock_BlockBodyGeneric)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_consensus_v1_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_consensus_v1_block_proto_goTypes,
		DependencyIndexes: file_types_consensus_v1_block_proto_depIdxs,
		MessageInfos:      file_types_consensus_v1_block_proto_msgTypes,
	}.Build()
	File_types_consensus_v1_block_proto = out.File
	file_types_consensus_v1_block_proto_rawDesc = nil
	file_types_consensus_v1_block_proto_goTypes = nil
	file_types_consensus_v1_block_proto_depIdxs = nil
}
