// SPDX-License-Identifier: MIT
//
// Copyright (c) 2024 Berachain Foundation
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";
package types.evm.v1;

option go_package = "github.com/itsdevbear/bolaris/types/evm/v1";

// Log represents an protobuf compatible Ethereum Log that defines a contract
// log event. These events are generated by the LOG opcode and stored/indexed by
// the node.
//
// NOTE: address, topics and data are consensus fields. The rest of the fields
// are derived, i.e. filled in by the nodes, but not secured by consensus.
message Log {
  // address of the contract that generated the event
  bytes address = 1;
  // topics is a list of topics provided by the contract.
  repeated bytes topics = 2;
  // data which is supplied by the contract, usually ABI-encoded
  bytes data = 3;

  // block_number of the block in which the transaction was included
  uint64 block_number = 4;
  // tx_hash is the transaction hash
  bytes tx_hash = 5;
  // tx_index of the transaction in the block
  uint64 tx_index = 6;
  // block_hash of the block in which the transaction was included
  bytes block_hash = 7;
  // index of the log in the block
  uint64 index = 8;

  // removed is true if this log was reverted due to a chain
  // reorganisation. You must pay attention to this field if you receive logs
  // through a filter query.
  bool removed = 9;
}
