syntax = "proto3";
package polaris.evm.v1alpha1;

import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/itsdevbear/bolaris/cosmos/x/evm/types";

// Msg defines the x/evm Msg service.
service MsgService {
  option (cosmos.msg.v1.service) = true;
}

// WrappedPayloadEnvelope encapsulates an Ethereum transaction as an SDK message.
message WrappedPayloadEnvelope {
  // data is inner transaction data of the Ethereum transaction.
  bytes data = 1;
}

// WrappedPayloadEnvelopeResponse defines the block response.
message WrappedPayloadEnvelopeResponse {}

// WrappedForkChoice encapsulates an Ethereum transaction as an SDK message.
message WrappedForkChoice {
  // data is inner transaction data of the Ethereum transaction.
  bytes data = 1;
}

// WrappedForkChoiceResponse defines the block response.
message WrappedForkChoiceResponse {}

// Status represents the status of a transaction.
enum Status {
  // STATUS_REVERT_UNSPECIFIED indicates that the transaction reverted.
  STATUS_REVERT_UNSPECIFIED = 0;
  // STATUS_SUCCESS indicates that the transaction completed successfully.
  STATUS_SUCCESS = 1;
  // STATUS_NOT_INCLUDED indicates that the transaction was not included in the
  // `evm` block, due to an critical error.
  STATUS_NOT_INCLUDED = 2;
}
